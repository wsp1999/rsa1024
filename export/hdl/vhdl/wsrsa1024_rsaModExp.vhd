-- ==============================================================
-- Generated by Vitis HLS v2023.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity wsrsa1024_rsaModExp is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    M_val : IN STD_LOGIC_VECTOR (1023 downto 0);
    e_val : IN STD_LOGIC_VECTOR (1023 downto 0);
    n_val : IN STD_LOGIC_VECTOR (1023 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (1023 downto 0) );
end;


architecture behav of wsrsa1024_rsaModExp is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (9 downto 0) := "0000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (9 downto 0) := "0000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (9 downto 0) := "0000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (9 downto 0) := "0000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (9 downto 0) := "0000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (9 downto 0) := "0001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (9 downto 0) := "0010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (9 downto 0) := "0100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (9 downto 0) := "1000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv11_3FF : STD_LOGIC_VECTOR (10 downto 0) := "01111111111";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv1024_lc_2 : STD_LOGIC_VECTOR (1023 downto
    constant ap_const_lv1024_lc_1 : STD_LOGIC_VECTOR (1023 downto
    constant ap_const_lv11_7FF : STD_LOGIC_VECTOR (10 downto 0) := "11111111111";
    constant ap_const_boolean_0 : BOOLEAN := false;

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal reg_142 : STD_LOGIC_VECTOR (1023 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal tmp_fu_162_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal n_val_cast1_fu_156_p1 : STD_LOGIC_VECTOR (1024 downto 0);
    signal n_val_cast1_reg_371 : STD_LOGIC_VECTOR (1024 downto 0);
    signal icmp_ln30_fu_189_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln30_reg_384 : STD_LOGIC_VECTOR (0 downto 0);
    signal xbar_2_fu_218_p3 : STD_LOGIC_VECTOR (1023 downto 0);
    signal xbar_2_reg_388 : STD_LOGIC_VECTOR (1023 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal grp_rsaModExp_Pipeline_VITIS_LOOP_8_1_fu_95_ap_start : STD_LOGIC;
    signal grp_rsaModExp_Pipeline_VITIS_LOOP_8_1_fu_95_ap_done : STD_LOGIC;
    signal grp_rsaModExp_Pipeline_VITIS_LOOP_8_1_fu_95_ap_idle : STD_LOGIC;
    signal grp_rsaModExp_Pipeline_VITIS_LOOP_8_1_fu_95_ap_ready : STD_LOGIC;
    signal grp_rsaModExp_Pipeline_VITIS_LOOP_8_1_fu_95_P_out : STD_LOGIC_VECTOR (1023 downto 0);
    signal grp_rsaModExp_Pipeline_VITIS_LOOP_8_1_fu_95_P_out_ap_vld : STD_LOGIC;
    signal grp_rsaModExp_Pipeline_VITIS_LOOP_8_11_fu_106_ap_start : STD_LOGIC;
    signal grp_rsaModExp_Pipeline_VITIS_LOOP_8_11_fu_106_ap_done : STD_LOGIC;
    signal grp_rsaModExp_Pipeline_VITIS_LOOP_8_11_fu_106_ap_idle : STD_LOGIC;
    signal grp_rsaModExp_Pipeline_VITIS_LOOP_8_11_fu_106_ap_ready : STD_LOGIC;
    signal grp_rsaModExp_Pipeline_VITIS_LOOP_8_11_fu_106_P_6_out : STD_LOGIC_VECTOR (1023 downto 0);
    signal grp_rsaModExp_Pipeline_VITIS_LOOP_8_11_fu_106_P_6_out_ap_vld : STD_LOGIC;
    signal grp_rsaModExp_Pipeline_VITIS_LOOP_16_1_fu_115_ap_start : STD_LOGIC;
    signal grp_rsaModExp_Pipeline_VITIS_LOOP_16_1_fu_115_ap_done : STD_LOGIC;
    signal grp_rsaModExp_Pipeline_VITIS_LOOP_16_1_fu_115_ap_idle : STD_LOGIC;
    signal grp_rsaModExp_Pipeline_VITIS_LOOP_16_1_fu_115_ap_ready : STD_LOGIC;
    signal grp_rsaModExp_Pipeline_VITIS_LOOP_16_1_fu_115_S_out : STD_LOGIC_VECTOR (1024 downto 0);
    signal grp_rsaModExp_Pipeline_VITIS_LOOP_16_1_fu_115_S_out_ap_vld : STD_LOGIC;
    signal grp_rsaModExp_Pipeline_VITIS_LOOP_16_13_fu_122_ap_start : STD_LOGIC;
    signal grp_rsaModExp_Pipeline_VITIS_LOOP_16_13_fu_122_ap_done : STD_LOGIC;
    signal grp_rsaModExp_Pipeline_VITIS_LOOP_16_13_fu_122_ap_idle : STD_LOGIC;
    signal grp_rsaModExp_Pipeline_VITIS_LOOP_16_13_fu_122_ap_ready : STD_LOGIC;
    signal grp_rsaModExp_Pipeline_VITIS_LOOP_16_13_fu_122_S_3_out : STD_LOGIC_VECTOR (1024 downto 0);
    signal grp_rsaModExp_Pipeline_VITIS_LOOP_16_13_fu_122_S_3_out_ap_vld : STD_LOGIC;
    signal grp_rsaModExp_Pipeline_VITIS_LOOP_16_12_fu_129_ap_start : STD_LOGIC;
    signal grp_rsaModExp_Pipeline_VITIS_LOOP_16_12_fu_129_ap_done : STD_LOGIC;
    signal grp_rsaModExp_Pipeline_VITIS_LOOP_16_12_fu_129_ap_idle : STD_LOGIC;
    signal grp_rsaModExp_Pipeline_VITIS_LOOP_16_12_fu_129_ap_ready : STD_LOGIC;
    signal grp_rsaModExp_Pipeline_VITIS_LOOP_16_12_fu_129_S_6_out : STD_LOGIC_VECTOR (1024 downto 0);
    signal grp_rsaModExp_Pipeline_VITIS_LOOP_16_12_fu_129_S_6_out_ap_vld : STD_LOGIC;
    signal xbar_fu_250_p3 : STD_LOGIC_VECTOR (1023 downto 0);
    signal ap_phi_mux_xbar_1_phi_fu_89_p4 : STD_LOGIC_VECTOR (1023 downto 0);
    signal xbar_1_reg_86 : STD_LOGIC_VECTOR (1023 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal grp_rsaModExp_Pipeline_VITIS_LOOP_8_1_fu_95_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal P_loc_fu_64 : STD_LOGIC_VECTOR (1023 downto 0);
    signal grp_rsaModExp_Pipeline_VITIS_LOOP_8_11_fu_106_ap_start_reg : STD_LOGIC := '0';
    signal X_fu_48 : STD_LOGIC_VECTOR (1023 downto 0);
    signal grp_rsaModExp_Pipeline_VITIS_LOOP_16_1_fu_115_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal grp_rsaModExp_Pipeline_VITIS_LOOP_16_13_fu_122_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal grp_rsaModExp_Pipeline_VITIS_LOOP_16_12_fu_129_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal i_01_fu_44 : STD_LOGIC_VECTOR (10 downto 0);
    signal i_11_fu_259_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal trunc_ln30_fu_170_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln30_fu_174_p1 : STD_LOGIC_VECTOR (1023 downto 0);
    signal shl_ln30_fu_178_p2 : STD_LOGIC_VECTOR (1023 downto 0);
    signal and_ln30_fu_184_p2 : STD_LOGIC_VECTOR (1023 downto 0);
    signal icmp_ln29_1_fu_202_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_fu_198_p1 : STD_LOGIC_VECTOR (1023 downto 0);
    signal xor_ln29_1_fu_207_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln31_fu_213_p2 : STD_LOGIC_VECTOR (1023 downto 0);
    signal icmp_ln29_2_fu_234_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_17_fu_230_p1 : STD_LOGIC_VECTOR (1023 downto 0);
    signal xor_ln29_2_fu_239_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln31_2_fu_245_p2 : STD_LOGIC_VECTOR (1023 downto 0);
    signal icmp_ln29_fu_281_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_18_fu_277_p1 : STD_LOGIC_VECTOR (1023 downto 0);
    signal xor_ln29_fu_286_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln31_1_fu_292_p2 : STD_LOGIC_VECTOR (1023 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_block_state2_on_subcall_done : BOOLEAN;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component wsrsa1024_rsaModExp_Pipeline_VITIS_LOOP_8_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        conv_i14_i : IN STD_LOGIC_VECTOR (1023 downto 0);
        conv_i11_i : IN STD_LOGIC_VECTOR (1023 downto 0);
        zext_ln8 : IN STD_LOGIC_VECTOR (1023 downto 0);
        P_out : OUT STD_LOGIC_VECTOR (1023 downto 0);
        P_out_ap_vld : OUT STD_LOGIC );
    end component;


    component wsrsa1024_rsaModExp_Pipeline_VITIS_LOOP_8_11 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        conv_i11_i : IN STD_LOGIC_VECTOR (1023 downto 0);
        zext_ln8 : IN STD_LOGIC_VECTOR (1023 downto 0);
        P_6_out : OUT STD_LOGIC_VECTOR (1023 downto 0);
        P_6_out_ap_vld : OUT STD_LOGIC );
    end component;


    component wsrsa1024_rsaModExp_Pipeline_VITIS_LOOP_16_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        zext_ln13 : IN STD_LOGIC_VECTOR (1023 downto 0);
        M : IN STD_LOGIC_VECTOR (1023 downto 0);
        S_out : OUT STD_LOGIC_VECTOR (1024 downto 0);
        S_out_ap_vld : OUT STD_LOGIC );
    end component;


    component wsrsa1024_rsaModExp_Pipeline_VITIS_LOOP_16_13 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        zext_ln13_1 : IN STD_LOGIC_VECTOR (1023 downto 0);
        M : IN STD_LOGIC_VECTOR (1023 downto 0);
        S_3_out : OUT STD_LOGIC_VECTOR (1024 downto 0);
        S_3_out_ap_vld : OUT STD_LOGIC );
    end component;


    component wsrsa1024_rsaModExp_Pipeline_VITIS_LOOP_16_12 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        X_1 : IN STD_LOGIC_VECTOR (1023 downto 0);
        zext_ln13_2 : IN STD_LOGIC_VECTOR (1023 downto 0);
        M : IN STD_LOGIC_VECTOR (1023 downto 0);
        S_6_out : OUT STD_LOGIC_VECTOR (1024 downto 0);
        S_6_out_ap_vld : OUT STD_LOGIC );
    end component;



begin
    grp_rsaModExp_Pipeline_VITIS_LOOP_8_1_fu_95 : component wsrsa1024_rsaModExp_Pipeline_VITIS_LOOP_8_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_rsaModExp_Pipeline_VITIS_LOOP_8_1_fu_95_ap_start,
        ap_done => grp_rsaModExp_Pipeline_VITIS_LOOP_8_1_fu_95_ap_done,
        ap_idle => grp_rsaModExp_Pipeline_VITIS_LOOP_8_1_fu_95_ap_idle,
        ap_ready => grp_rsaModExp_Pipeline_VITIS_LOOP_8_1_fu_95_ap_ready,
        conv_i14_i => M_val,
        conv_i11_i => n_val,
        zext_ln8 => n_val,
        P_out => grp_rsaModExp_Pipeline_VITIS_LOOP_8_1_fu_95_P_out,
        P_out_ap_vld => grp_rsaModExp_Pipeline_VITIS_LOOP_8_1_fu_95_P_out_ap_vld);

    grp_rsaModExp_Pipeline_VITIS_LOOP_8_11_fu_106 : component wsrsa1024_rsaModExp_Pipeline_VITIS_LOOP_8_11
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_rsaModExp_Pipeline_VITIS_LOOP_8_11_fu_106_ap_start,
        ap_done => grp_rsaModExp_Pipeline_VITIS_LOOP_8_11_fu_106_ap_done,
        ap_idle => grp_rsaModExp_Pipeline_VITIS_LOOP_8_11_fu_106_ap_idle,
        ap_ready => grp_rsaModExp_Pipeline_VITIS_LOOP_8_11_fu_106_ap_ready,
        conv_i11_i => n_val,
        zext_ln8 => n_val,
        P_6_out => grp_rsaModExp_Pipeline_VITIS_LOOP_8_11_fu_106_P_6_out,
        P_6_out_ap_vld => grp_rsaModExp_Pipeline_VITIS_LOOP_8_11_fu_106_P_6_out_ap_vld);

    grp_rsaModExp_Pipeline_VITIS_LOOP_16_1_fu_115 : component wsrsa1024_rsaModExp_Pipeline_VITIS_LOOP_16_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_rsaModExp_Pipeline_VITIS_LOOP_16_1_fu_115_ap_start,
        ap_done => grp_rsaModExp_Pipeline_VITIS_LOOP_16_1_fu_115_ap_done,
        ap_idle => grp_rsaModExp_Pipeline_VITIS_LOOP_16_1_fu_115_ap_idle,
        ap_ready => grp_rsaModExp_Pipeline_VITIS_LOOP_16_1_fu_115_ap_ready,
        zext_ln13 => reg_142,
        M => n_val,
        S_out => grp_rsaModExp_Pipeline_VITIS_LOOP_16_1_fu_115_S_out,
        S_out_ap_vld => grp_rsaModExp_Pipeline_VITIS_LOOP_16_1_fu_115_S_out_ap_vld);

    grp_rsaModExp_Pipeline_VITIS_LOOP_16_13_fu_122 : component wsrsa1024_rsaModExp_Pipeline_VITIS_LOOP_16_13
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_rsaModExp_Pipeline_VITIS_LOOP_16_13_fu_122_ap_start,
        ap_done => grp_rsaModExp_Pipeline_VITIS_LOOP_16_13_fu_122_ap_done,
        ap_idle => grp_rsaModExp_Pipeline_VITIS_LOOP_16_13_fu_122_ap_idle,
        ap_ready => grp_rsaModExp_Pipeline_VITIS_LOOP_16_13_fu_122_ap_ready,
        zext_ln13_1 => reg_142,
        M => n_val,
        S_3_out => grp_rsaModExp_Pipeline_VITIS_LOOP_16_13_fu_122_S_3_out,
        S_3_out_ap_vld => grp_rsaModExp_Pipeline_VITIS_LOOP_16_13_fu_122_S_3_out_ap_vld);

    grp_rsaModExp_Pipeline_VITIS_LOOP_16_12_fu_129 : component wsrsa1024_rsaModExp_Pipeline_VITIS_LOOP_16_12
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_rsaModExp_Pipeline_VITIS_LOOP_16_12_fu_129_ap_start,
        ap_done => grp_rsaModExp_Pipeline_VITIS_LOOP_16_12_fu_129_ap_done,
        ap_idle => grp_rsaModExp_Pipeline_VITIS_LOOP_16_12_fu_129_ap_idle,
        ap_ready => grp_rsaModExp_Pipeline_VITIS_LOOP_16_12_fu_129_ap_ready,
        X_1 => P_loc_fu_64,
        zext_ln13_2 => xbar_2_reg_388,
        M => n_val,
        S_6_out => grp_rsaModExp_Pipeline_VITIS_LOOP_16_12_fu_129_S_6_out,
        S_6_out_ap_vld => grp_rsaModExp_Pipeline_VITIS_LOOP_16_12_fu_129_S_6_out_ap_vld);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_rsaModExp_Pipeline_VITIS_LOOP_16_12_fu_129_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_rsaModExp_Pipeline_VITIS_LOOP_16_12_fu_129_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln30_reg_384 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                    grp_rsaModExp_Pipeline_VITIS_LOOP_16_12_fu_129_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_rsaModExp_Pipeline_VITIS_LOOP_16_12_fu_129_ap_ready = ap_const_logic_1)) then 
                    grp_rsaModExp_Pipeline_VITIS_LOOP_16_12_fu_129_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_rsaModExp_Pipeline_VITIS_LOOP_16_13_fu_122_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_rsaModExp_Pipeline_VITIS_LOOP_16_13_fu_122_ap_start_reg <= ap_const_logic_0;
            else
                if (((tmp_fu_162_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                    grp_rsaModExp_Pipeline_VITIS_LOOP_16_13_fu_122_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_rsaModExp_Pipeline_VITIS_LOOP_16_13_fu_122_ap_ready = ap_const_logic_1)) then 
                    grp_rsaModExp_Pipeline_VITIS_LOOP_16_13_fu_122_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_rsaModExp_Pipeline_VITIS_LOOP_16_1_fu_115_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_rsaModExp_Pipeline_VITIS_LOOP_16_1_fu_115_ap_start_reg <= ap_const_logic_0;
            else
                if (((tmp_fu_162_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                    grp_rsaModExp_Pipeline_VITIS_LOOP_16_1_fu_115_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_rsaModExp_Pipeline_VITIS_LOOP_16_1_fu_115_ap_ready = ap_const_logic_1)) then 
                    grp_rsaModExp_Pipeline_VITIS_LOOP_16_1_fu_115_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_rsaModExp_Pipeline_VITIS_LOOP_8_11_fu_106_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_rsaModExp_Pipeline_VITIS_LOOP_8_11_fu_106_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    grp_rsaModExp_Pipeline_VITIS_LOOP_8_11_fu_106_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_rsaModExp_Pipeline_VITIS_LOOP_8_11_fu_106_ap_ready = ap_const_logic_1)) then 
                    grp_rsaModExp_Pipeline_VITIS_LOOP_8_11_fu_106_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_rsaModExp_Pipeline_VITIS_LOOP_8_1_fu_95_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_rsaModExp_Pipeline_VITIS_LOOP_8_1_fu_95_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    grp_rsaModExp_Pipeline_VITIS_LOOP_8_1_fu_95_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_rsaModExp_Pipeline_VITIS_LOOP_8_1_fu_95_ap_ready = ap_const_logic_1)) then 
                    grp_rsaModExp_Pipeline_VITIS_LOOP_8_1_fu_95_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    X_fu_48_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                X_fu_48 <= ap_phi_mux_xbar_1_phi_fu_89_p4;
            elsif (((grp_rsaModExp_Pipeline_VITIS_LOOP_8_11_fu_106_P_6_out_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                X_fu_48 <= grp_rsaModExp_Pipeline_VITIS_LOOP_8_11_fu_106_P_6_out;
            end if; 
        end if;
    end process;

    i_01_fu_44_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                i_01_fu_44 <= ap_const_lv11_3FF;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                i_01_fu_44 <= i_11_fu_259_p2;
            end if; 
        end if;
    end process;

    xbar_1_reg_86_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln30_reg_384 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                xbar_1_reg_86 <= xbar_2_fu_218_p3;
            elsif (((icmp_ln30_reg_384 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                xbar_1_reg_86 <= xbar_fu_250_p3;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_rsaModExp_Pipeline_VITIS_LOOP_8_1_fu_95_P_out_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                P_loc_fu_64 <= grp_rsaModExp_Pipeline_VITIS_LOOP_8_1_fu_95_P_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_fu_162_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                icmp_ln30_reg_384 <= icmp_ln30_fu_189_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                    n_val_cast1_reg_371(1023 downto 0) <= n_val_cast1_fu_156_p1(1023 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((tmp_fu_162_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((tmp_fu_162_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then
                reg_142 <= X_fu_48;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                xbar_2_reg_388 <= xbar_2_fu_218_p3;
            end if;
        end if;
    end process;
    n_val_cast1_reg_371(1024) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state4, tmp_fu_162_p3, icmp_ln30_reg_384, ap_CS_fsm_state6, grp_rsaModExp_Pipeline_VITIS_LOOP_16_1_fu_115_ap_done, grp_rsaModExp_Pipeline_VITIS_LOOP_16_13_fu_122_ap_done, grp_rsaModExp_Pipeline_VITIS_LOOP_16_12_fu_129_ap_done, ap_CS_fsm_state2, ap_CS_fsm_state5, ap_CS_fsm_state9, ap_CS_fsm_state7, ap_block_state2_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((tmp_fu_162_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state5 => 
                if (((grp_rsaModExp_Pipeline_VITIS_LOOP_16_1_fu_115_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                if (((icmp_ln30_reg_384 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state7 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state7) and (grp_rsaModExp_Pipeline_VITIS_LOOP_16_12_fu_129_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state9 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state9) and (grp_rsaModExp_Pipeline_VITIS_LOOP_16_13_fu_122_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXX";
        end case;
    end process;
    and_ln30_fu_184_p2 <= (shl_ln30_fu_178_p2 and e_val);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(ap_block_state2_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state2_on_subcall_done)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;

    ap_ST_fsm_state5_blk_assign_proc : process(grp_rsaModExp_Pipeline_VITIS_LOOP_16_1_fu_115_ap_done)
    begin
        if ((grp_rsaModExp_Pipeline_VITIS_LOOP_16_1_fu_115_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state5_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state5_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state6_blk <= ap_const_logic_0;

    ap_ST_fsm_state7_blk_assign_proc : process(grp_rsaModExp_Pipeline_VITIS_LOOP_16_12_fu_129_ap_done)
    begin
        if ((grp_rsaModExp_Pipeline_VITIS_LOOP_16_12_fu_129_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state7_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state7_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state8_blk <= ap_const_logic_0;

    ap_ST_fsm_state9_blk_assign_proc : process(grp_rsaModExp_Pipeline_VITIS_LOOP_16_13_fu_122_ap_done)
    begin
        if ((grp_rsaModExp_Pipeline_VITIS_LOOP_16_13_fu_122_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state9_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state9_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state2_on_subcall_done_assign_proc : process(grp_rsaModExp_Pipeline_VITIS_LOOP_8_1_fu_95_ap_done, grp_rsaModExp_Pipeline_VITIS_LOOP_8_11_fu_106_ap_done)
    begin
                ap_block_state2_on_subcall_done <= ((grp_rsaModExp_Pipeline_VITIS_LOOP_8_11_fu_106_ap_done = ap_const_logic_0) or (grp_rsaModExp_Pipeline_VITIS_LOOP_8_1_fu_95_ap_done = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_xbar_1_phi_fu_89_p4_assign_proc : process(icmp_ln30_reg_384, xbar_fu_250_p3, xbar_1_reg_86, ap_CS_fsm_state8)
    begin
        if (((icmp_ln30_reg_384 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            ap_phi_mux_xbar_1_phi_fu_89_p4 <= xbar_fu_250_p3;
        else 
            ap_phi_mux_xbar_1_phi_fu_89_p4 <= xbar_1_reg_86;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= 
        sub_ln31_1_fu_292_p2 when (xor_ln29_fu_286_p2(0) = '1') else 
        empty_18_fu_277_p1;
    empty_17_fu_230_p1 <= grp_rsaModExp_Pipeline_VITIS_LOOP_16_12_fu_129_S_6_out(1024 - 1 downto 0);
    empty_18_fu_277_p1 <= grp_rsaModExp_Pipeline_VITIS_LOOP_16_13_fu_122_S_3_out(1024 - 1 downto 0);
    empty_fu_198_p1 <= grp_rsaModExp_Pipeline_VITIS_LOOP_16_1_fu_115_S_out(1024 - 1 downto 0);
    grp_rsaModExp_Pipeline_VITIS_LOOP_16_12_fu_129_ap_start <= grp_rsaModExp_Pipeline_VITIS_LOOP_16_12_fu_129_ap_start_reg;
    grp_rsaModExp_Pipeline_VITIS_LOOP_16_13_fu_122_ap_start <= grp_rsaModExp_Pipeline_VITIS_LOOP_16_13_fu_122_ap_start_reg;
    grp_rsaModExp_Pipeline_VITIS_LOOP_16_1_fu_115_ap_start <= grp_rsaModExp_Pipeline_VITIS_LOOP_16_1_fu_115_ap_start_reg;
    grp_rsaModExp_Pipeline_VITIS_LOOP_8_11_fu_106_ap_start <= grp_rsaModExp_Pipeline_VITIS_LOOP_8_11_fu_106_ap_start_reg;
    grp_rsaModExp_Pipeline_VITIS_LOOP_8_1_fu_95_ap_start <= grp_rsaModExp_Pipeline_VITIS_LOOP_8_1_fu_95_ap_start_reg;
    i_11_fu_259_p2 <= std_logic_vector(unsigned(i_01_fu_44) + unsigned(ap_const_lv11_7FF));
    icmp_ln29_1_fu_202_p2 <= "1" when (unsigned(grp_rsaModExp_Pipeline_VITIS_LOOP_16_1_fu_115_S_out) < unsigned(n_val_cast1_reg_371)) else "0";
    icmp_ln29_2_fu_234_p2 <= "1" when (unsigned(grp_rsaModExp_Pipeline_VITIS_LOOP_16_12_fu_129_S_6_out) < unsigned(n_val_cast1_reg_371)) else "0";
    icmp_ln29_fu_281_p2 <= "1" when (unsigned(grp_rsaModExp_Pipeline_VITIS_LOOP_16_13_fu_122_S_3_out) < unsigned(n_val_cast1_reg_371)) else "0";
    icmp_ln30_fu_189_p2 <= "1" when (and_ln30_fu_184_p2 = ap_const_lv1024_lc_1) else "0";
    n_val_cast1_fu_156_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(n_val),1025));
    shl_ln30_fu_178_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv1024_lc_2),to_integer(unsigned('0' & zext_ln30_fu_174_p1(31-1 downto 0)))));
    sub_ln31_1_fu_292_p2 <= std_logic_vector(unsigned(empty_18_fu_277_p1) - unsigned(n_val));
    sub_ln31_2_fu_245_p2 <= std_logic_vector(unsigned(empty_17_fu_230_p1) - unsigned(n_val));
    sub_ln31_fu_213_p2 <= std_logic_vector(unsigned(empty_fu_198_p1) - unsigned(n_val));
    tmp_fu_162_p3 <= i_01_fu_44(10 downto 10);
    trunc_ln30_fu_170_p1 <= i_01_fu_44(10 - 1 downto 0);
    xbar_2_fu_218_p3 <= 
        sub_ln31_fu_213_p2 when (xor_ln29_1_fu_207_p2(0) = '1') else 
        empty_fu_198_p1;
    xbar_fu_250_p3 <= 
        sub_ln31_2_fu_245_p2 when (xor_ln29_2_fu_239_p2(0) = '1') else 
        empty_17_fu_230_p1;
    xor_ln29_1_fu_207_p2 <= (icmp_ln29_1_fu_202_p2 xor ap_const_lv1_1);
    xor_ln29_2_fu_239_p2 <= (icmp_ln29_2_fu_234_p2 xor ap_const_lv1_1);
    xor_ln29_fu_286_p2 <= (icmp_ln29_fu_281_p2 xor ap_const_lv1_1);
    zext_ln30_fu_174_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln30_fu_170_p1),1024));
end behav;
